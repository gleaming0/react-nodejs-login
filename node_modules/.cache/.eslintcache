[{"/Users/jsc/Desktop/react-nodejs-login/src/index.js":"1","/Users/jsc/Desktop/react-nodejs-login/src/reportWebVitals.js":"2","/Users/jsc/Desktop/react-nodejs-login/src/App.js":"3","/Users/jsc/git/react-nodejs-login/src/index.js":"4","/Users/jsc/git/react-nodejs-login/src/reportWebVitals.js":"5","/Users/jsc/git/react-nodejs-login/src/App.js":"6"},{"size":535,"mtime":1680838286677,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1680838286677,"results":"9","hashOfConfig":"8"},{"size":8229,"mtime":1683901199624,"results":"10","hashOfConfig":"8"},{"size":535,"mtime":1680838286677,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1680838286677,"results":"13","hashOfConfig":"12"},{"size":8205,"mtime":1684032326851,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lm5o7w",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"t9t07g",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"/Users/jsc/Desktop/react-nodejs-login/src/index.js",[],[],"/Users/jsc/Desktop/react-nodejs-login/src/reportWebVitals.js",[],[],"/Users/jsc/Desktop/react-nodejs-login/src/App.js",["35","36","37","38"],[],"import './App.css';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport ReactHtmlParser from 'react-html-parser';\nimport Axios from 'axios';\n\nfunction Login(props) {\n  const [id, setId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  \n  return <>\n    <h2>로그인</h2>\n\n    <div className=\"form\">\n      <p><input className=\"login\" type=\"text\" name=\"username\" placeholder=\"아이디\" onChange={event => {\n        setId(event.target.value);\n      }} /></p>\n      <p><input className=\"login\" type=\"password\" name=\"pwd\" placeholder=\"비밀번호\" onChange={event => {\n        setPassword(event.target.value);\n      }} /></p>\n\n      <p><input className=\"btn\" type=\"submit\" value=\"로그인\" onClick={() => {\n        const userData = {\n          userId: id,\n          userPassword: password,\n        };\n        fetch(\"http://192.168.45.54:3001/login\", { //auth 주소에서 받을 예정\n          method: \"post\", // method :통신방법\n          headers: {      // headers: API 응답에 대한 정보를 담음\n            \"content-type\": \"application/json\",\n          },\n          body: JSON.stringify(userData), //userData라는 객체를 보냄\n        })\n          .then((res) => res.json())\n          .then((json) => {            \n            if(json.isLogin===\"True\"){\n              props.setMode(\"WELCOME\");\n            }\n            else {\n              alert(json.isLogin)\n            }\n          });\n      }} /></p>\n    </div>\n\n    <p>계정이 없으신가요?  <button onClick={() => {\n      props.setMode(\"SIGNIN\");\n    }}>회원가입</button></p>\n  </> \n}\n\n\nfunction Signin(props) {\n  const [id, setId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n\n  return <>\n    <h2>회원가입</h2>\n\n    <div className=\"form\">\n      <p><input className=\"login\" type=\"text\" placeholder=\"아이디\" onChange={event => {\n        setId(event.target.value);\n      }} /></p>\n      <p><input className=\"login\" type=\"password\" placeholder=\"비밀번호\" onChange={event => {\n        setPassword(event.target.value);\n      }} /></p>\n      <p><input className=\"login\" type=\"password\" placeholder=\"비밀번호 확인\" onChange={event => {\n        setPassword2(event.target.value);\n      }} /></p>\n\n      <p><input className=\"btn\" type=\"submit\" value=\"회원가입\" onClick={() => {\n        const userData = {\n          userId: id,\n          userPassword: password,\n          userPassword2: password2,\n        };\n        fetch(\"http://192.168.45.54:3001/signin\", { //signin 주소에서 받을 예정\n          method: \"post\", // method :통신방법\n          headers: {      // headers: API 응답에 대한 정보를 담음\n            \"content-type\": \"application/json\",\n          },\n          body: JSON.stringify(userData), //userData라는 객체를 보냄\n        })\n          .then((res) => res.json())\n          .then((json) => {\n            if(json.isSuccess===\"True\"){\n              alert('회원가입이 완료되었습니다!')\n              props.setMode(\"LOGIN\");\n            }\n            else{\n              alert(json.isSuccess)\n            }\n          });\n      }} /></p>\n    </div>\n\n    <p>로그인화면으로 돌아가기  <button onClick={() => {\n      props.setMode(\"LOGIN\");\n    }}>로그인</button></p>\n  </> \n}\n\nfunction Board() {\n  const [desc, setDesc] = useState('');\n  const [image, setImage] = useState('');\n\n\n  const [movieContent, setMovieContent] = useState({\n    title: '',\n    content: ''\n  })\n\n  const [viewContent, setViewContent] = useState([]);\n\n  useEffect(()=>{\n    Axios.get('http://192.168.45.54:3001/api/get').then((response)=>{\n      setViewContent(response.data);\n    })\n  },[viewContent])\n\n  const submitReview = ()=>{\n    Axios.post('http://192.168.45.54:3001/api/insert', {\n      title: movieContent.title,\n      content: movieContent.content\n    }).then(()=>{\n      alert('등록 완료!');\n    })\n  };\n\n  const getValue = e => {\n    const { name, value } = e.target;\n    setMovieContent({\n      ...movieContent,\n      [name]: value\n    })\n  };\n\n   // (1)\n    const [flag, setFlag] = useState(false);\n    const imgLink = \"http://192.168.45.54:3001/images/\"\n\n    const customUploadAdapter = (loader) => { // (2)\n        return {\n            upload(){\n                return new Promise ((resolve, reject) => {\n                    const data = new FormData();\n                     loader.file.then( (file) => {\n                            data.append(\"name\", file.name);\n                            data.append(\"file\", file);\n\n                            Axios.post('/api/upload', data)\n                                .then((res) => {\n                                    if(!flag){\n                                        setFlag(true);\n                                        setImage(res.data.filename);\n                                    }\n                                    resolve({\n                                        default: `${imgLink}/${res.data.filename}`\n                                    });\n                                })\n                                .catch((err)=>reject(err));\n                        })\n                })\n            }\n        }\n    }\n\n    function uploadPlugin (editor){ // (3)\n        editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {\n            return customUploadAdapter(loader);\n        }\n    }\n\n  return (\n    <div className=\"App\">\n      <h1>게시판</h1>\n      <div className='movie-container'>\n        {viewContent.map(element =>\n          <div style={{ border: '1px solid #333' }}>\n            <h2>{element.title}</h2>\n            <div>\n              {ReactHtmlParser(element.content)}\n            </div>\n          </div>\n        )}\n      </div>\n      <div className='form-wrapper'>\n        <input className=\"title-input\"\n          type='text'\n          placeholder='제목'\n          onChange={getValue}\n          name='title'\n        />\n        <CKEditor\n          editor={ClassicEditor}\n          config={{ // (4)\n            extraPlugins: [uploadPlugin]\n          }}\n          data=\"<p>Hello from CKEditor 5!</p>\"\n          onReady={editor => {\n            // You can store the \"editor\" and use when it is needed.\n            console.log('Editor is ready to use!', editor);\n          }}\n          onChange={(event, editor) => {\n            const data = editor.getData();\n            console.log({ event, editor, data });\n            setMovieContent({\n              ...movieContent,\n              content: data\n            })\n          }}\n          onBlur={(event, editor) => {\n            console.log('Blur.', editor);\n          }}\n          onFocus={(event, editor) => {\n            console.log('Focus.', editor);\n          }}\n        />\n      </div>\n      <button\n        className=\"submit-button\"\n        onClick={() => {\n          setViewContent(viewContent.concat({...movieContent}));\n        }\n      }>입력</button>\n    </div>\n  );\n\n}\n\nfunction App(props) {\n  const [mode, setMode] = useState(\"\");\n  // const [mode2, setMode2] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"http://192.168.45.54:3001/authcheck\")\n      .then((res) => res.json())\n      .then((json) => {        \n        if (json.isLogin === \"True\") {\n          setMode(\"WELCOME\");\n        }\n        else {\n          setMode(\"LOGIN\");\n        }\n      });\n  }, []); \n\n  let content = null;  \n\n  if(mode===\"LOGIN\"){\n    content = <Login setMode={setMode}></Login> \n  }\n  else if (mode === 'SIGNIN') {\n    content = <Signin setMode={setMode}></Signin> \n  }\n  else if (mode === 'WELCOME') {\n    content = <>\n    {/* <h2>메인 페이지에 오신 것을 환영합니다</h2> */}\n    {/* <p>로그인에 성공하셨습니다.</p>  */}\n    <Board setMode={setMode}></Board>\n    <p><a href=\"/logout\">로그아웃</a></p> \n    {/* <Board setMode={setMode}></Board> */}\n    {/* <a href=\"/board\" onclick = {content = <Board setMode={setMode}></Board>}>게시판</a> */}\n    </>\n  }\n\n  return (\n    <>\n\n      <div className=\"background\">\n        {content}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n","/Users/jsc/git/react-nodejs-login/src/index.js",[],[],"/Users/jsc/git/react-nodejs-login/src/reportWebVitals.js",[],[],"/Users/jsc/git/react-nodejs-login/src/App.js",["39","40","41","42"],[],"import './App.css';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport ReactHtmlParser from 'react-html-parser';\nimport Axios from 'axios';\n\nfunction Login(props) {\n  const [id, setId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  \n  return <>\n    <h2>로그인</h2>\n\n    <div className=\"form\">\n      <p><input className=\"login\" type=\"text\" name=\"username\" placeholder=\"아이디\" onChange={event => {\n        setId(event.target.value);\n      }} /></p>\n      <p><input className=\"login\" type=\"password\" name=\"pwd\" placeholder=\"비밀번호\" onChange={event => {\n        setPassword(event.target.value);\n      }} /></p>\n\n      <p><input className=\"btn\" type=\"submit\" value=\"로그인\" onClick={() => {\n        const userData = {\n          userId: id,\n          userPassword: password,\n        };\n        fetch(\"http://localhost:3001/login\", { //auth 주소에서 받을 예정\n          method: \"post\", // method :통신방법\n          headers: {      // headers: API 응답에 대한 정보를 담음\n            \"content-type\": \"application/json\",\n          },\n          body: JSON.stringify(userData), //userData라는 객체를 보냄\n        })\n          .then((res) => res.json())\n          .then((json) => {            \n            if(json.isLogin===\"True\"){\n              props.setMode(\"WELCOME\");\n            }\n            else {\n              alert(json.isLogin)\n            }\n          });\n      }} /></p>\n    </div>\n\n    <p>계정이 없으신가요?  <button onClick={() => {\n      props.setMode(\"SIGNIN\");\n    }}>회원가입</button></p>\n  </> \n}\n\n\nfunction Signin(props) {\n  const [id, setId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n\n  return <>\n    <h2>회원가입</h2>\n\n    <div className=\"form\">\n      <p><input className=\"login\" type=\"text\" placeholder=\"아이디\" onChange={event => {\n        setId(event.target.value);\n      }} /></p>\n      <p><input className=\"login\" type=\"password\" placeholder=\"비밀번호\" onChange={event => {\n        setPassword(event.target.value);\n      }} /></p>\n      <p><input className=\"login\" type=\"password\" placeholder=\"비밀번호 확인\" onChange={event => {\n        setPassword2(event.target.value);\n      }} /></p>\n\n      <p><input className=\"btn\" type=\"submit\" value=\"회원가입\" onClick={() => {\n        const userData = {\n          userId: id,\n          userPassword: password,\n          userPassword2: password2,\n        };\n        fetch(\"http://localhost:3001/signin\", { //signin 주소에서 받을 예정\n          method: \"post\", // method :통신방법\n          headers: {      // headers: API 응답에 대한 정보를 담음\n            \"content-type\": \"application/json\",\n          },\n          body: JSON.stringify(userData), //userData라는 객체를 보냄\n        })\n          .then((res) => res.json())\n          .then((json) => {\n            if(json.isSuccess===\"True\"){\n              alert('회원가입이 완료되었습니다!')\n              props.setMode(\"LOGIN\");\n            }\n            else{\n              alert(json.isSuccess)\n            }\n          });\n      }} /></p>\n    </div>\n\n    <p>로그인화면으로 돌아가기  <button onClick={() => {\n      props.setMode(\"LOGIN\");\n    }}>로그인</button></p>\n  </> \n}\n\nfunction Board() {\n  const [desc, setDesc] = useState('');\n  const [image, setImage] = useState('');\n\n\n  const [movieContent, setMovieContent] = useState({\n    title: '',\n    content: ''\n  })\n\n  const [viewContent, setViewContent] = useState([]);\n\n  useEffect(()=>{\n    Axios.get('http://localhost:3001/api/get').then((response)=>{\n      setViewContent(response.data);\n    })\n  },[viewContent])\n\n  const submitReview = ()=>{\n    Axios.post('http://localhost:3001/api/insert', {\n      title: movieContent.title,\n      content: movieContent.content\n    }).then(()=>{\n      alert('등록 완료!');\n    })\n  };\n\n  const getValue = e => {\n    const { name, value } = e.target;\n    setMovieContent({\n      ...movieContent,\n      [name]: value\n    })\n  };\n\n   // (1)\n    const [flag, setFlag] = useState(false);\n    const imgLink = \"http://localhost:3001/images/\"\n\n    const customUploadAdapter = (loader) => { // (2)\n        return {\n            upload(){\n                return new Promise ((resolve, reject) => {\n                    const data = new FormData();\n                     loader.file.then( (file) => {\n                            data.append(\"name\", file.name);\n                            data.append(\"file\", file);\n\n                            Axios.post('/api/upload', data)\n                                .then((res) => {\n                                    if(!flag){\n                                        setFlag(true);\n                                        setImage(res.data.filename);\n                                    }\n                                    resolve({\n                                        default: `${imgLink}/${res.data.filename}`\n                                    });\n                                })\n                                .catch((err)=>reject(err));\n                        })\n                })\n            }\n        }\n    }\n\n    function uploadPlugin (editor){ // (3)\n        editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {\n            return customUploadAdapter(loader);\n        }\n    }\n\n  return (\n    <div className=\"App\">\n      <h1>게시판</h1>\n      <div className='movie-container'>\n        {viewContent.map(element =>\n          <div style={{ border: '1px solid #333' }}>\n            <h2>{element.title}</h2>\n            <div>\n              {ReactHtmlParser(element.content)}\n            </div>\n          </div>\n        )}\n      </div>\n      <div className='form-wrapper'>\n        <input className=\"title-input\"\n          type='text'\n          placeholder='제목'\n          onChange={getValue}\n          name='title'\n        />\n        <CKEditor\n          editor={ClassicEditor}\n          config={{ // (4)\n            extraPlugins: [uploadPlugin]\n          }}\n          data=\"<p>Hello from CKEditor 5!</p>\"\n          onReady={editor => {\n            // You can store the \"editor\" and use when it is needed.\n            console.log('Editor is ready to use!', editor);\n          }}\n          onChange={(event, editor) => {\n            const data = editor.getData();\n            console.log({ event, editor, data });\n            setMovieContent({\n              ...movieContent,\n              content: data\n            })\n          }}\n          onBlur={(event, editor) => {\n            console.log('Blur.', editor);\n          }}\n          onFocus={(event, editor) => {\n            console.log('Focus.', editor);\n          }}\n        />\n      </div>\n      <button\n        className=\"submit-button\"\n        onClick={() => {\n          setViewContent(viewContent.concat({...movieContent}));\n        }\n      }>입력</button>\n    </div>\n  );\n\n}\n\nfunction App(props) {\n  const [mode, setMode] = useState(\"\");\n  // const [mode2, setMode2] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"http://localhost:3001/authcheck\")\n      .then((res) => res.json())\n      .then((json) => {        \n        if (json.isLogin === \"True\") {\n          setMode(\"WELCOME\");\n        }\n        else {\n          setMode(\"LOGIN\");\n        }\n      });\n  }, []); \n\n  let content = null;  \n\n  if(mode===\"LOGIN\"){\n    content = <Login setMode={setMode}></Login> \n  }\n  else if (mode === 'SIGNIN') {\n    content = <Signin setMode={setMode}></Signin> \n  }\n  else if (mode === 'WELCOME') {\n    content = <>\n    {/* <h2>메인 페이지에 오신 것을 환영합니다</h2> */}\n    {/* <p>로그인에 성공하셨습니다.</p>  */}\n    <Board setMode={setMode}></Board>\n    <p><a href=\"/logout\">로그아웃</a></p> \n    {/* <Board setMode={setMode}></Board> */}\n    {/* <a href=\"/board\" onclick = {content = <Board setMode={setMode}></Board>}>게시판</a> */}\n    </>\n  }\n\n  return (\n    <>\n\n      <div className=\"background\">\n        {content}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n",{"ruleId":"43","severity":1,"message":"44","line":107,"column":10,"nodeType":"45","messageId":"46","endLine":107,"endColumn":14},{"ruleId":"43","severity":1,"message":"47","line":107,"column":16,"nodeType":"45","messageId":"46","endLine":107,"endColumn":23},{"ruleId":"43","severity":1,"message":"48","line":108,"column":10,"nodeType":"45","messageId":"46","endLine":108,"endColumn":15},{"ruleId":"43","severity":1,"message":"49","line":124,"column":9,"nodeType":"45","messageId":"46","endLine":124,"endColumn":21},{"ruleId":"43","severity":1,"message":"44","line":107,"column":10,"nodeType":"45","messageId":"46","endLine":107,"endColumn":14},{"ruleId":"43","severity":1,"message":"47","line":107,"column":16,"nodeType":"45","messageId":"46","endLine":107,"endColumn":23},{"ruleId":"43","severity":1,"message":"48","line":108,"column":10,"nodeType":"45","messageId":"46","endLine":108,"endColumn":15},{"ruleId":"43","severity":1,"message":"49","line":124,"column":9,"nodeType":"45","messageId":"46","endLine":124,"endColumn":21},"no-unused-vars","'desc' is assigned a value but never used.","Identifier","unusedVar","'setDesc' is assigned a value but never used.","'image' is assigned a value but never used.","'submitReview' is assigned a value but never used."]